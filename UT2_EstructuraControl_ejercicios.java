import java.util.Scanner;

/**
 *  ! UT 2 - PR√ÅCTICA N¬∫ 1 - PROGRAMACI√ìN EN JAVA
 *  ? Este archivo contiene varios ejercicios resueltos en Java con explicaciones detalladas.
 *  ? Se incluyen estructuras de control, validaciones, funciones y conceptos b√°sicos esenciales.
 *  * Cada ejercicio tiene un enunciado previo y est√° explicado paso a paso para facilitar el aprendizaje.
 *
 *  üìå Autor: Joaqu√≠n
 *  üìÜ Fecha: 2025
 */

public class UT2_EstructuraControl_ejercicios {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // *******************************
        // * üóìÔ∏è EJERCICIO 1: VALIDAR FECHA
        // *******************************
        /**
         *  ! üìú ENUNCIADO:
         *  Programa en Java que lea tres n√∫meros enteros cualesquiera y nos diga si los tres forman una fecha correcta o no.
         *  - Un mes debe estar entre 1 y 12.
         *  - Un d√≠a debe estar entre 1 y 30.
         *  - El a√±o debe ser distinto de 0.
         *  
         *  üìå Ejemplo:
         *  ‚úî Entrada: (10, 5, 1500) -> Salida: "La fecha 10/5/1500 es correcta."
         *  ‚ùå Entrada: (-3, 12, 0) -> Salida: "La fecha -3/12/0 no es correcta."
         */

        System.out.println("\nüóìÔ∏è EJERCICIO 1: VALIDAR FECHA");
        System.out.print("Introduce el d√≠a: ");
        int dia = scanner.nextInt();
        System.out.print("Introduce el mes: ");
        int mes = scanner.nextInt();
        System.out.print("Introduce el a√±o: ");
        int anio = scanner.nextInt();

        if (anio != 0 && mes >= 1 && mes <= 12 && dia >= 1 && dia <= 30) {
            System.out.println("‚úÖ La fecha " + dia + "/" + mes + "/" + anio + " es correcta.");
        } else {
            System.out.println("‚ùå La fecha " + dia + "/" + mes + "/" + anio + " no es correcta.");
        }

        // **************************************
        // * üí∞ EJERCICIO 2: SUELDOS DE EMPLEADOS
        // **************************************
        /**
         *  ! üìú ENUNCIADO:
         *  Programa en Java que solicite un n√∫mero entero al usuario, que representa el n√∫mero de empleados de una f√°brica.
         *  - Si el n√∫mero ingresado es positivo, se pedir√° el sueldo de cada empleado.
         *  - Se calcular√° el sueldo medio y la cantidad de empleados que ganan m√°s de 1000‚Ç¨.
         *  - Si el n√∫mero de empleados es negativo o 0, el programa finalizar√° mostrando un error.
         */

        System.out.println("\nüí∞ EJERCICIO 2: SUELDOS DE EMPLEADOS");
        System.out.print("Introduce el n√∫mero de empleados: ");
        int empleados = scanner.nextInt();

        if (empleados > 0) {
            double totalSueldos = 0;
            int empleadosMasMil = 0;

            for (int i = 1; i <= empleados; i++) {
                System.out.print("Introduce el sueldo del empleado " + i + ": ");
                double sueldo = scanner.nextDouble();
                totalSueldos += sueldo;
                if (sueldo > 1000) {
                    empleadosMasMil++;
                }
            }

            System.out.println("üí≤ Sueldo medio: " + (totalSueldos / empleados));
            System.out.println("üë• Empleados que cobran m√°s de 1000‚Ç¨: " + empleadosMasMil);
        } else {
            System.out.println("‚ùå N√∫mero de empleados no v√°lido.");
        }

        // ****************************************
        // * üî¢ EJERCICIO 3: CONTAR N√öMEROS PRIMOS
        // ****************************************
        /**
         *  ! üìú ENUNCIADO:
         *  Programa en Java que solicite un n√∫mero positivo mayor que 1.
         *  - El programa debe contar cu√°ntos n√∫meros primos impares hay entre 1 y N.
         *  - Se implementar√° una funci√≥n llamada `esPrimo()` que determinar√° si un n√∫mero es primo.
         */

        System.out.println("\nüî¢ EJERCICIO 3: CONTAR N√öMEROS PRIMOS IMPARES");
        int numero;
        do {
            System.out.print("Introduce un n√∫mero mayor que 1: ");
            numero = scanner.nextInt();
        } while (numero <= 1);

        int contadorPrimos = 0;
        for (int i = 1; i <= numero; i++) {
            if (esPrimo(i) && i % 2 != 0) {
                contadorPrimos++;
            }
        }
        System.out.println("üî¢ Cantidad de n√∫meros primos impares entre 1 y " + numero + ": " + contadorPrimos);

        // ********************************************
        // * üî° EJERCICIO 4: VALIDAR CADENA
        // ********************************************
        /**
         *  ! üìú ENUNCIADO:
         *  Programa en Java que verifique si una cadena de texto cumple ciertos requisitos.
         *  - La longitud de la cadena debe ser mayor a un n√∫mero ingresado.
         *  - Si no cumple, debe contener al menos un car√°cter especial: `$ @ &`
         *  - Se implementa una funci√≥n `validar()` para verificar estas condiciones.
         */

        System.out.println("\nüî° EJERCICIO 4: VALIDAR CADENA");
        scanner.nextLine(); // Limpiar buffer
        System.out.print("Introduce una cadena de texto: ");
        String cadena = scanner.nextLine();
        System.out.print("Introduce un n√∫mero m√≠nimo de caracteres: ");
        int tamano = scanner.nextInt();

        if (validar(cadena, tamano)) {
            System.out.println("‚úÖ La cadena es v√°lida.");
        } else {
            System.out.println("‚ùå La cadena no es v√°lida.");
        }

        scanner.close();
    }

    /**
     *  * üîç FUNCIONES AUXILIARES PARA VALIDACIONES
     */

    // * M√©todo para verificar si un n√∫mero es primo (sin usar for)
    public static boolean esPrimo(int num) {
        if (num < 2) return false;
        int divisor = 2;
        while (divisor < num) {
            if (num % divisor == 0) return false;
            divisor++;
        }
        return true;
    }

    // * M√©todo para validar cadenas seg√∫n el tama√±o o caracteres especiales
    public static boolean validar(String texto, int tamano) {
        String caracteresEspeciales = "$@&";
        if (texto.length() > tamano) return true;
        for (char c : caracteresEspeciales.toCharArray()) {
            if (texto.contains(String.valueOf(c))) return true;
        }
        return false;
    }
}
